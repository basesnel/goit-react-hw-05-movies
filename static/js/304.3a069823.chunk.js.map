{"version":3,"file":"static/js/304.3a069823.chunk.js","mappings":"uQAAA,IAAMA,EAAS,mCAEFC,EAAc,SAAAC,GACzB,OAAOC,MAAM,4DAAD,OACkDH,EADlD,iBACiEE,IAC3EE,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,EAEYC,EAAiB,SAAAC,GAC5B,OAAOL,MAAM,qDAAD,OAC2CH,EAD3C,kBAC2DQ,IACrEJ,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,EAEYG,EAAkB,SAAAC,GAC7B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,oBAC0CV,IACpDI,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,EAEYK,EAAkB,SAAAD,GAC7B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACkDV,IAC5DI,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,EAEYM,EAAkB,SAAAF,GAC7B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACkDV,IAC5DI,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,C,8ECtCYO,E,OAAcC,GAAAA,IAAH,uM,SCET,SAASC,EAAT,GAAkC,IAAhBC,EAAe,EAAfA,YAC/B,OACE,UAACH,EAAD,YACE,SAAC,KAAD,CACEI,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAEX,uBAAIL,MAGT,C,0FCdYM,EAAOR,EAAAA,GAAAA,GAAH,8DAKJS,EAAOT,EAAAA,GAAAA,GAAH,gDAIJU,GAAYV,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAH,mR,SCTP,SAASY,EAAT,GAAyD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SACzD,OACE,SAACP,EAAD,UACGK,EAAYG,KAAI,SAAAC,GAAK,OACpB,SAACR,EAAD,WACE,UAACC,EAAD,CAAWQ,GAAE,UAAKJ,GAAL,OAAeG,EAAMrB,IAAMuB,MAAO,CAAEC,KAAML,GAAvD,UACGE,EAAMI,MADT,MACmBJ,EAAMK,iBAFhBL,EAAMrB,GADG,KAS3B,C,sHCbY2B,E,OAAYvB,GAAAA,IAAH,kF,2BCyDtB,EAnDa,WACX,OAAgCwB,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMb,GAAWc,EAAAA,EAAAA,MA4BjB,OA1BAC,EAAAA,EAAAA,YAAU,WACRF,GAAW,GAEXG,YAAW,YACT5C,EAAAA,EAAAA,IAAY,GACTG,MAAK,SAAA0C,GAYJ,OAXyBA,EAAOC,QAAQjB,KACtC,YAAkC,IAA/BpB,EAA8B,EAA9BA,GAAIyB,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aACNY,EAAO,CAAC,EAMd,OAJAA,EAAKtC,GAAKA,EACVsC,EAAKb,MAAQA,EACba,EAAKZ,aAAeA,EAEbY,CACR,GAGJ,IACA5C,MAAK,SAAA6C,GACJT,EAAYS,EACb,IACAC,QAAQR,GAAW,GACvB,GAAE,IACJ,GAAE,KAGD,8BACGD,GACC,SAAC1B,EAAA,EAAD,CAAQC,YAAY,kCAEpBuB,IACE,UAACF,EAAD,YACE,4CACA,SAACX,EAAA,EAAD,CACEC,YAAaY,EACbX,QAAQ,WACRC,SAAUA,QAOvB,C","sources":["api/api-service.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["const apiKey = '5a20241834eb9a6674dc92f9938aafbf';\n\nexport const getTrending = page => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${apiKey}&page=${page}`\n  ).then(data => {\n    return data.json();\n  });\n};\n\nexport const getSearchMovie = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`\n  ).then(data => {\n    return data.json();\n  });\n};\n\nexport const getMovieDetails = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`\n  ).then(data => {\n    return data.json();\n  });\n};\n\nexport const getMovieCredits = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`\n  ).then(data => {\n    return data.json();\n  });\n};\n\nexport const getMovieReviews = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${apiKey}`\n  ).then(data => {\n    return data.json();\n  });\n};\n","import styled from 'styled-components';\n\nexport const LoaderBlock = styled.div`\n  margin: 16px auto 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  justify-content: center;\n  color: #808080;\n  font-weight: 700;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\nimport { LoaderBlock } from './Loader.styled';\n\nexport default function Loader({ searchQuery }) {\n  return (\n    <LoaderBlock>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n      <p>{searchQuery}</p>\n    </LoaderBlock>\n  );\n}\n\nLoader.propTypes = {\n  searchQuery: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  padding: 8px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  padding-bottom: 8px;\n`;\n\nexport const MovieLink = styled(Link)`\n  display: inline-block;\n  padding: 4px 0;\n  color: #444;\n  border-bottom: 1px solid transparent;\n  text-decoration: none;\n\n  transition: border-bottom 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    border-bottom: 1px solid #444;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { List, Item, MovieLink } from './MoviesList.styled';\n\nexport default function MoviesList({ foundMovies, subpath, location }) {\n  return (\n    <List>\n      {foundMovies.map(movie => (\n        <Item key={movie.id}>\n          <MovieLink to={`${subpath}${movie.id}`} state={{ from: location }}>\n            {movie.title} | {movie.vote_average}\n          </MovieLink>\n        </Item>\n      ))}\n    </List>\n  );\n}\n\nMoviesList.propTypes = {\n  foundMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  subpath: PropTypes.string.isRequired,\n  location: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 16px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getTrending } from '../../api/api-service';\nimport { Container } from './Home.styled';\n\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [trending, setTrending] = useState([]);\n  const [pending, setPending] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    setPending(true);\n\n    setTimeout(() => {\n      getTrending(1)\n        .then(trends => {\n          const moviesCollection = trends.results.map(\n            ({ id, title, vote_average }) => {\n              const item = {};\n\n              item.id = id;\n              item.title = title;\n              item.vote_average = vote_average;\n\n              return item;\n            }\n          );\n          return moviesCollection;\n        })\n        .then(moviesCollection => {\n          setTrending(moviesCollection);\n        })\n        .finally(setPending(false));\n    }, 500);\n  }, []);\n\n  return (\n    <>\n      {pending ? (\n        <Loader searchQuery=\"Search for trending movies...\" />\n      ) : (\n        trending && (\n          <Container>\n            <h1>Tranding today</h1>\n            <MoviesList\n              foundMovies={trending}\n              subpath=\"/movies/\"\n              location={location}\n            />\n          </Container>\n        )\n      )}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["apiKey","getTrending","page","fetch","then","data","json","getSearchMovie","query","getMovieDetails","id","getMovieCredits","getMovieReviews","LoaderBlock","styled","Loader","searchQuery","strokeColor","strokeWidth","animationDuration","width","visible","List","Item","MovieLink","Link","MoviesList","foundMovies","subpath","location","map","movie","to","state","from","title","vote_average","Container","useState","trending","setTrending","pending","setPending","useLocation","useEffect","setTimeout","trends","results","item","moviesCollection","finally"],"sourceRoot":""}