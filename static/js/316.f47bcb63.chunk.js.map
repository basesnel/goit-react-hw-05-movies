{"version":3,"file":"static/js/316.f47bcb63.chunk.js","mappings":"uQAAA,IAAMA,EAAS,mCAGFC,EAAc,SAAAC,GACzB,OAAOC,MAAM,4DAAD,OACkDH,EADlD,iBACiEE,IAC3EE,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,EAEYC,EAAiB,SAAAC,GAC5B,OAAOL,MAAM,qDAAD,OAC2CH,EAD3C,kBAC2DQ,IACrEJ,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,EAEYG,EAAkB,SAAAC,GAC7B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,oBAC0CV,IACpDI,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,EAEYK,EAAkB,SAAAD,GAC7B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACkDV,IAC5DI,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,EAEYM,EAAkB,SAAAF,GAC7B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACkDV,IAC5DI,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,C,kICtCYO,EAAYC,EAAAA,GAAAA,IAAH,kFAMTC,EAAOD,EAAAA,GAAAA,IAAH,8IAQJE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,iF,SCZN,SAASI,EAAT,GAA6C,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UAC5C,OACE,UAACP,EAAD,YACE,SAACG,EAAD,CAAUK,GAAIF,EAAd,sBACA,UAACJ,EAAD,WACGK,EAAUE,cACT,gBACEC,IAAG,yCAAoCH,EAAUE,aACjDE,IAAKJ,EAAUK,WAGnB,4BACE,0BACGL,EAAUM,MADb,KACsBN,EAAUO,aAAaC,MAAM,EAAG,GADtD,QAGA,wCAAgBC,SAAkC,GAAzBT,EAAUU,aAAmB,IAAtD,QACA,sCACA,uBAAIV,EAAUW,YACd,oCACA,uBAAIX,EAAUY,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAIvD,SAACrB,EAAD,WACE,2BACE,yBACE,SAAC,KAAD,CAAMM,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,6BAIN,SAAC,EAAAgB,SAAD,CAAUC,UAAU,iDAApB,UACE,SAAC,KAAD,QAIP,C,aCOD,EA5CqB,WAAO,IAAD,IACzB,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAwBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAyB7D,OAtBAC,EAAAA,EAAAA,YAAU,YACRzC,EAAAA,EAAAA,IAAgBiC,GACbtC,MAAK,SAAA+C,GACJ,OAAOA,CACR,IACA/C,MAAK,SAAAoC,GAUJ,MATiB,CACfd,MAAOc,EAAUd,MACjBC,aAAca,EAAUb,aACxBG,aAAcU,EAAUV,aACxBR,YAAakB,EAAUlB,YACvBG,QAASe,EAAUf,QACnBM,SAAUS,EAAUT,SACpBC,OAAQQ,EAAUR,OAGrB,IACA5B,MAAK,SAAAgB,GACJqB,EAAarB,EACd,GACJ,GAAE,CAACsB,KAGF,8BACGF,IACC,SAACtB,EAAD,CACEC,SAAU2B,EAAsBM,QAChChC,UAAWoB,KAKpB,C","sources":["api/api-service.js","components/MovieDesk.styled.js","components/MovieDesc.jsx","pages/MovieDetails.jsx"],"sourcesContent":["const apiKey = '5a20241834eb9a6674dc92f9938aafbf';\n// page = 1;\n\nexport const getTrending = page => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${apiKey}&page=${page}`\n  ).then(data => {\n    return data.json();\n  });\n};\n\nexport const getSearchMovie = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`\n  ).then(data => {\n    return data.json();\n  });\n};\n\nexport const getMovieDetails = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`\n  ).then(data => {\n    return data.json();\n  });\n};\n\nexport const getMovieCredits = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`\n  ).then(data => {\n    return data.json();\n  });\n};\n\nexport const getMovieReviews = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${apiKey}`\n  ).then(data => {\n    return data.json();\n  });\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 16px;\n`;\n\nexport const Desc = styled.div`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #c0c0c0;\n`;\n\nexport const BackLink = styled(Link)`\n  display: block;\n  margin: 16px;\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\nimport { Suspense } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport { Container, Desc, BackLink } from './MovieDesk.styled';\n\nexport default function MovieDesc({ backLink, movieSpec }) {\n  return (\n    <Container>\n      <BackLink to={backLink}>Go back</BackLink>\n      <Desc>\n        {movieSpec.poster_path && (\n          <img\n            src={`https://image.tmdb.org/t/p/w200${movieSpec.poster_path}`}\n            alt={movieSpec.tagline}\n          />\n        )}\n        <div>\n          <h1>\n            {movieSpec.title} ({movieSpec.release_date.slice(0, 4)})\n          </h1>\n          <p>User score: {parseInt(movieSpec.vote_average * 10, 10)}%</p>\n          <h2>Overview</h2>\n          <p>{movieSpec.overview}</p>\n          <h2>Genres</h2>\n          <p>{movieSpec.genres.map(genre => genre.name).join(', ')}</p>\n        </div>\n      </Desc>\n\n      <Desc>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </Desc>\n      <Suspense fallback={<div>Loading sub-page...</div>}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n}\n\nMovieDesc.propTypes = {\n  backLink: PropTypes.object.isRequired,\n  movieSpec: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    tagline: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  }).isRequired,\n};\n","import MovieDesc from 'components/MovieDesc';\nimport { useState, useEffect, useRef } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\n\nimport { getMovieDetails } from '../api/api-service';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState(null);\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n\n  const backLinkToLocationRef = useRef(location.state?.from ?? '/movies');\n  // console.log(backLinkToLocationRef);\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(movie => {\n        return movie;\n      })\n      .then(movieData => {\n        const movieRes = {\n          title: movieData.title,\n          release_date: movieData.release_date,\n          vote_average: movieData.vote_average,\n          poster_path: movieData.poster_path,\n          tagline: movieData.tagline,\n          overview: movieData.overview,\n          genres: movieData.genres,\n        };\n        return movieRes;\n      })\n      .then(movieSpec => {\n        setMovieData(movieSpec);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {movieData && (\n        <MovieDesc\n          backLink={backLinkToLocationRef.current}\n          movieSpec={movieData}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["apiKey","getTrending","page","fetch","then","data","json","getSearchMovie","query","getMovieDetails","id","getMovieCredits","getMovieReviews","Container","styled","Desc","BackLink","Link","MovieDesc","backLink","movieSpec","to","poster_path","src","alt","tagline","title","release_date","slice","parseInt","vote_average","overview","genres","map","genre","name","join","Suspense","fallback","useState","movieData","setMovieData","movieId","useParams","location","useLocation","backLinkToLocationRef","useRef","state","from","useEffect","movie","current"],"sourceRoot":""}