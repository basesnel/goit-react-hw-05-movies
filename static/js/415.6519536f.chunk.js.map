{"version":3,"file":"static/js/415.6519536f.chunk.js","mappings":"uQAAA,IAAMA,EAAS,mCAGFC,EAAc,SAAAC,GACzB,OAAOC,MAAM,4DAAD,OACkDH,EADlD,iBACiEE,IAC3EE,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,EAEYC,EAAiB,SAAAC,GAC5B,OAAOL,MAAM,qDAAD,OAC2CH,EAD3C,kBAC2DQ,IACrEJ,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,EAEYG,EAAkB,SAAAC,GAC7B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,oBAC0CV,IACpDI,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,EAEYK,EAAkB,SAAAD,GAC7B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACkDV,IAC5DI,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,EAEYM,EAAkB,SAAAF,GAC7B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACkDV,IAC5DI,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,C,2ECtCc,SAASO,EAAT,GAAyD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SACzD,OACE,wBACGF,EAAYG,KAAI,SAAAC,GAAK,OACpB,yBACE,UAAC,KAAD,CAAMC,GAAE,UAAKJ,GAAL,OAAeG,EAAMR,IAAMU,MAAO,CAAEC,KAAML,GAAlD,UACGE,EAAMI,MADT,MACmBJ,EAAMK,iBAFlBL,EAAMR,GADK,KAS3B,C,gGCoCD,UA1Ca,WACX,OAAgCc,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMV,GAAWW,EAAAA,EAAAA,MAwBjB,OAtBAC,EAAAA,EAAAA,YAAU,YACR3B,EAAAA,EAAAA,IAAY,GACTG,MAAK,SAAAyB,GACJ,OAAOA,EAAOC,OACf,IACA1B,MAAK,SAAA2B,GAUJ,OATyBA,EAAOd,KAAI,YAAkC,IAA/BP,EAA8B,EAA9BA,GAAIY,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aAC1CS,EAAO,CAAC,EAMd,OAJAA,EAAKtB,GAAKA,EACVsB,EAAKV,MAAQA,EACbU,EAAKT,aAAeA,EAEbS,CACR,GAEF,IACA5B,MAAK,SAAA6B,GACJP,EAAYO,EACb,GACJ,GAAE,KAGD,8BACGR,IACC,UAAC,IAAD,YACE,4CACA,SAAC,IAAD,CACEX,YAAaW,EACbV,QAAQ,WACRC,SAAUA,QAMrB,C,qEC/CYkB,E,OAAYC,GAAAA,IAAH,iF","sources":["api/api-service.js","components/MoviesList.jsx","pages/Home.jsx","pages/Home.styled.js"],"sourcesContent":["const apiKey = '5a20241834eb9a6674dc92f9938aafbf';\n// page = 1;\n\nexport const getTrending = page => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${apiKey}&page=${page}`\n  ).then(data => {\n    return data.json();\n  });\n};\n\nexport const getSearchMovie = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`\n  ).then(data => {\n    return data.json();\n  });\n};\n\nexport const getMovieDetails = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`\n  ).then(data => {\n    return data.json();\n  });\n};\n\nexport const getMovieCredits = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`\n  ).then(data => {\n    return data.json();\n  });\n};\n\nexport const getMovieReviews = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${apiKey}`\n  ).then(data => {\n    return data.json();\n  });\n};\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default function MoviesList({ foundMovies, subpath, location }) {\n  return (\n    <ul>\n      {foundMovies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`${subpath}${movie.id}`} state={{ from: location }}>\n            {movie.title} | {movie.vote_average}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nMoviesList.propTypes = {\n  foundMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  subpath: PropTypes.string.isRequired,\n  location: PropTypes.object.isRequired,\n};\n","// import { nanoid } from 'nanoid';\nimport { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getTrending } from '../api/api-service';\nimport { Container } from './Home.styled';\n\n// const moviesTrending = new MoviesApiService();\nimport MoviesList from 'components/MoviesList';\n\nconst Home = () => {\n  const [trending, setTrending] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrending(1)\n      .then(trends => {\n        return trends.results;\n      })\n      .then(movies => {\n        const moviesCollection = movies.map(({ id, title, vote_average }) => {\n          const item = {};\n\n          item.id = id;\n          item.title = title;\n          item.vote_average = vote_average;\n\n          return item;\n        });\n        return moviesCollection;\n      })\n      .then(moviesCollection => {\n        setTrending(moviesCollection);\n      });\n  }, []);\n\n  return (\n    <>\n      {trending && (\n        <Container>\n          <h1>Tranding today</h1>\n          <MoviesList\n            foundMovies={trending}\n            subpath=\"/movies/\"\n            location={location}\n          />\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 16px;\n`;\n"],"names":["apiKey","getTrending","page","fetch","then","data","json","getSearchMovie","query","getMovieDetails","id","getMovieCredits","getMovieReviews","MoviesList","foundMovies","subpath","location","map","movie","to","state","from","title","vote_average","useState","trending","setTrending","useLocation","useEffect","trends","results","movies","item","moviesCollection","Container","styled"],"sourceRoot":""}