{"version":3,"file":"static/js/712.62832f17.chunk.js","mappings":"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","sources":["api/api-service.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MovieDesc/MovieDesk.styled.js","components/MovieDesc/MovieDesc.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const apiKey = '5a20241834eb9a6674dc92f9938aafbf';\n\nexport const getTrending = page => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${apiKey}&page=${page}`\n  ).then(data => {\n    return data.json();\n  });\n};\n\nexport const getSearchMovie = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`\n  ).then(data => {\n    return data.json();\n  });\n};\n\nexport const getMovieDetails = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`\n  ).then(data => {\n    return data.json();\n  });\n};\n\nexport const getMovieCredits = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`\n  ).then(data => {\n    return data.json();\n  });\n};\n\nexport const getMovieReviews = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${apiKey}`\n  ).then(data => {\n    return data.json();\n  });\n};\n","import styled from 'styled-components';\n\nexport const LoaderBlock = styled.div`\n  margin: 16px auto 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  justify-content: center;\n  color: #808080;\n  font-weight: 700;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\nimport { LoaderBlock } from './Loader.styled';\n\nexport default function Loader({ searchQuery }) {\n  return (\n    <LoaderBlock>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n      <p>{searchQuery}</p>\n    </LoaderBlock>\n  );\n}\n\nLoader.propTypes = {\n  searchQuery: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding: 0 16px;\n`;\n\nexport const Desc = styled.div`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  border-bottom: 1px solid #c0c0c0;\n  padding: 16px 0;\n`;\n\nexport const BackLink = styled(Link)`\n  display: inline-block;\n  padding: 8px 16px;\n  color: orangered;\n  border-radius: 4px;\n  text-decoration: none;\n  font-weight: 700;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: white;\n    background-color: orangered;\n  }\n`;\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 8px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  padding-bottom: 8px;\n`;\n\nexport const MoreDetailLink = styled(Link)`\n  display: inline-block;\n  padding: 4px 0;\n  color: #444;\n  border-bottom: 1px solid transparent;\n  text-decoration: none;\n\n  transition: border-bottom 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    border-bottom: 1px solid #444;\n  }\n`;\n\nexport const Loading = styled.div`\n  width: 150px;\n  height: 50px;\n  margin: 16px auto 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #808080;\n  border-radius: 5px;\n  color: #808080;\n`;\n","import PropTypes from 'prop-types';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport {\n  Container,\n  Desc,\n  BackLink,\n  List,\n  Item,\n  MoreDetailLink,\n  Loading,\n} from './MovieDesk.styled';\n\nexport default function MovieDesc({ backLink, movieSpec }) {\n  return (\n    <Container>\n      <BackLink to={backLink}>Go back</BackLink>\n      <Desc>\n        {movieSpec.poster_path && (\n          <img\n            src={`https://image.tmdb.org/t/p/w200${movieSpec.poster_path}`}\n            alt={movieSpec.tagline}\n          />\n        )}\n        <div>\n          <h1>\n            {movieSpec.title} ({movieSpec.release_date.slice(0, 4)})\n          </h1>\n          <p>User score: {parseInt(movieSpec.vote_average * 10, 10)}%</p>\n          <h2>Overview</h2>\n          <p>{movieSpec.overview}</p>\n          <h2>Genres</h2>\n          <p>{movieSpec.genres.map(genre => genre.name).join(', ')}</p>\n        </div>\n      </Desc>\n\n      <Desc>\n        <List>\n          <Item>\n            <MoreDetailLink to=\"cast\">Cast</MoreDetailLink>\n          </Item>\n          <Item>\n            <MoreDetailLink to=\"reviews\">Reviews</MoreDetailLink>\n          </Item>\n        </List>\n      </Desc>\n      <Suspense fallback={<Loading>Loading sub-page...</Loading>}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n}\n\nMovieDesc.propTypes = {\n  backLink: PropTypes.any.isRequired,\n  movieSpec: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    tagline: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 16px;\n`;\n","import MovieDesc from 'components/MovieDesc/MovieDesc';\nimport { useState, useEffect, useRef } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { Container } from './MovieDetails.styled';\n\nimport { getMovieDetails } from '../../api/api-service';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState(null);\n  const [pending, setPending] = useState(false);\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n\n  const backLinkToLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    setPending(true);\n\n    setTimeout(() => {\n      getMovieDetails(movieId)\n        .then(movieData => {\n          const movieRes = {\n            title: movieData.title,\n            release_date: movieData.release_date,\n            vote_average: movieData.vote_average,\n            poster_path: movieData.poster_path,\n            tagline: movieData.tagline,\n            overview: movieData.overview,\n            genres: movieData.genres,\n          };\n          return movieRes;\n        })\n        .then(movieSpec => {\n          setMovieData(movieSpec);\n        })\n        .finally(setPending(false));\n    }, 500);\n  }, [movieId]);\n\n  return (\n    <Container>\n      {pending ? (\n        <Loader searchQuery=\"Loading movie data...\" />\n      ) : (\n        movieData && (\n          <MovieDesc\n            backLink={backLinkToLocationRef.current}\n            movieSpec={movieData}\n          />\n        )\n      )}\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["apiKey","getTrending","page","fetch","then","data","json","getSearchMovie","query","getMovieDetails","id","getMovieCredits","getMovieReviews","LoaderBlock","styled","Loader","searchQuery","strokeColor","strokeWidth","animationDuration","width","visible","Container","Desc","BackLink","Link","List","Item","MoreDetailLink","Loading","MovieDesc","backLink","movieSpec","to","poster_path","src","alt","tagline","title","release_date","slice","parseInt","vote_average","overview","genres","map","genre","name","join","Suspense","fallback","useState","movieData","setMovieData","pending","setPending","movieId","useParams","location","useLocation","backLinkToLocationRef","useRef","state","from","useEffect","setTimeout","finally","current"],"sourceRoot":""}