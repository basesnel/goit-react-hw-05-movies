{"version":3,"file":"static/js/779.8265a258.chunk.js","mappings":"uQAAA,IAAMA,EAAS,mCAEFC,EAAc,SAAAC,GACzB,OAAOC,MAAM,4DAAD,OACkDH,EADlD,iBACiEE,IAC3EE,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,EAEYC,EAAiB,SAAAC,GAC5B,OAAOL,MAAM,qDAAD,OAC2CH,EAD3C,kBAC2DQ,IACrEJ,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,EAEYG,EAAkB,SAAAC,GAC7B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,oBAC0CV,IACpDI,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,EAEYK,EAAkB,SAAAD,GAC7B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACkDV,IAC5DI,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,EAEYM,EAAkB,SAAAF,GAC7B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACkDV,IAC5DI,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,C,qICtCYO,EAAOC,EAAAA,GAAAA,GAAH,8DAKJC,EAAOD,EAAAA,GAAAA,GAAH,gDAIJE,EAAQF,EAAAA,GAAAA,GAAH,2CAILG,EAAOH,EAAAA,GAAAA,EAAH,2C,SCuCjB,EAjDgB,WACd,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAgBM,GACbd,MAAK,SAAAoB,GACJ,OAAOA,EAAQC,OAChB,IACArB,MAAK,SAAAoB,GAUJ,OAT0BA,EAAQE,KAAI,YAA8B,IAA3BhB,EAA0B,EAA1BA,GAAIiB,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC7CC,EAAS,CAAC,EAMhB,OAJAA,EAAOnB,GAAKA,EACZmB,EAAOF,OAASA,EAChBE,EAAOD,QAAUA,EAEVC,CACR,GAEF,IACAzB,MAAK,SAAA0B,GACJR,EAAgBQ,EACjB,GACJ,GAAE,CAACZ,KAGF,8BACGG,EAAaU,QACZ,iCACE,qDAA6Bb,MAC7B,SAACL,EAAD,UACGQ,EAAaK,KAAI,SAAAG,GAChB,OACE,UAACd,EAAD,YACE,SAACC,EAAD,UAAQa,EAAOF,UACf,SAACV,EAAD,UAAOY,EAAOD,YAFLC,EAAOnB,GAKrB,UAIL,sDAIP,C","sources":["api/api-service.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["const apiKey = '5a20241834eb9a6674dc92f9938aafbf';\n\nexport const getTrending = page => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${apiKey}&page=${page}`\n  ).then(data => {\n    return data.json();\n  });\n};\n\nexport const getSearchMovie = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`\n  ).then(data => {\n    return data.json();\n  });\n};\n\nexport const getMovieDetails = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`\n  ).then(data => {\n    return data.json();\n  });\n};\n\nexport const getMovieCredits = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`\n  ).then(data => {\n    return data.json();\n  });\n};\n\nexport const getMovieReviews = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${apiKey}`\n  ).then(data => {\n    return data.json();\n  });\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 8px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  padding-bottom: 8px;\n`;\n\nexport const Title = styled.h3`\n  color: #202020;\n`;\n\nexport const Text = styled.p`\n  color: #808080;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieReviews } from 'api/api-service';\nimport { List, Item, Title, Text } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(reviews => {\n        return reviews.results;\n      })\n      .then(reviews => {\n        const reviewsCollection = reviews.map(({ id, author, content }) => {\n          const review = {};\n\n          review.id = id;\n          review.author = author;\n          review.content = content;\n\n          return review;\n        });\n        return reviewsCollection;\n      })\n      .then(reviewsCollection => {\n        setMovieReviews(reviewsCollection);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {movieReviews.length ? (\n        <>\n          <h2>Reviews detail content: {movieId}</h2>\n          <List>\n            {movieReviews.map(review => {\n              return (\n                <Item key={review.id}>\n                  <Title>{review.author}</Title>\n                  <Text>{review.content}</Text>\n                </Item>\n              );\n            })}\n          </List>\n        </>\n      ) : (\n        <p>No reviews for the movie.</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["apiKey","getTrending","page","fetch","then","data","json","getSearchMovie","query","getMovieDetails","id","getMovieCredits","getMovieReviews","List","styled","Item","Title","Text","movieId","useParams","useState","movieReviews","setMovieReviews","useEffect","reviews","results","map","author","content","review","reviewsCollection","length"],"sourceRoot":""}